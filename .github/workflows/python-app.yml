name: FireSight CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov flake8
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
        if [ -f api/requirements.txt ]; then pip install -r api/requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 backend/ api/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 backend/ api/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest backend/test_satellite_integration.py -v --cov=backend --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend Docker image
      run: |
        docker build -t firesight-backend:latest ./backend
    
    - name: Build API Docker image  
      run: |
        docker build -t firesight-api:latest ./api
    
    - name: Test Docker containers
      run: |
        # Test that containers can start properly
        docker run --rm -d --name test-backend firesight-backend:latest sleep 30
        docker run --rm -d --name test-api firesight-api:latest sleep 30
        sleep 5
        docker stop test-backend test-api || true
    
    - name: Deploy notification
      run: |
        echo "ðŸš€ FireSight deployment completed successfully!"
        echo "Backend and API Docker images built and tested."
