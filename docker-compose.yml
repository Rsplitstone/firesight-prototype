version: '3.8'

services:
  backend:
    build: ./backend
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - NASA_API_KEY=${NASA_API_KEY:-}
    volumes:
      - ./data:/app/data
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - firesight-network

  api:
    build: ./api
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_DEBUG=false
      - NASA_API_KEY=${NASA_API_KEY:-}
    volumes:
      - ./data:/app/data:ro
      - ./backend:/app/backend:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - firesight-network

  frontend:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - firesight-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - firesight-network

volumes:
  redis_data:

networks:
  firesight-network:
    driver: bridge
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  default:
    name: firesight-network
